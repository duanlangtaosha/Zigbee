C51 COMPILER V9.56.0.0   DS1302                                                            05/27/2017 01:33:14 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\ds1302.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\ds1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Head) DEBUG OBJECTEXTE
                    -ND PRINT(.\Listings\ds1302.lst) TABS(2) OBJECT(.\Objects\ds1302.obj)

line level    source

   1          #include "stc12C5A60S2.h"
   2          #include "intrins.h"
   3          #include "ds1302.h"
   4          
   5          /** \brief 初始化时间    秒     分   时   日   月,星期   年 */
   6          unsigned char code __g_initial_time[7] = {0x55, 0x33, 0x10, 0x26, 0x05, 5, 0x17};
   7          
   8          //unsigned char data timeNow[7];
   9          
  10          void delay1us()   //@12.000MHz
  11          {
  12   1        _nop_();
  13   1        _nop_();
  14   1        _nop_();
  15   1        _nop_();
  16   1        _nop_();
  17   1        _nop_();
  18   1        _nop_();
  19   1        _nop_();
  20   1      }
  21          
  22          /**
  23          * \brief SPI写单字节函数
  24          *
  25          * \param[in] dat : 要写入的数据
  26          *
  27          * \return 无
  28          *         
  29          */
  30          void ds1302_write_spi (unsigned char dat)
  31          {
  32   1        unsigned char i = 0;
  33   1      //  EA=0;
  34   1        for (i = 0; i < 8; i++) {
  35   2          
  36   2          
  37   2          DS1302_SCLK = 0;
  38   2          DS1302_IO = dat & 0x01;
  39   2          
  40   2          delay1us();
  41   2          dat >>= 1;
  42   2          DS1302_SCLK = 1;
  43   2          
  44   2          delay1us();
  45   2          
  46   2          
  47   2        } 
  48   1      //  EA=1;
  49   1      }
  50          
  51          /**
  52          * \brief SPI读单字节函数
  53          *
  54          * \param[in] dat : 要写入的数据
C51 COMPILER V9.56.0.0   DS1302                                                            05/27/2017 01:33:14 PAGE 2   

  55          *
  56          * \return 无
  57          *         
  58          */
  59          unsigned char ds1302_read_spi (void)
  60          {
  61   1        unsigned char i = 0, dat = 0;
  62   1      //  EA=0;
  63   1        for (i = 0; i < 8; i++) {
  64   2        
  65   2          DS1302_SCLK = 0;
  66   2          dat >>= 1;
  67   2          delay1us();
  68   2          if (DS1302_IO) {
  69   3            dat|= 0x80;
  70   3          }
  71   2          
  72   2          DS1302_SCLK = 1;
  73   2          delay1us();
  74   2        }
  75   1      //  EA=1;
  76   1         return dat;
  77   1      }
  78          
  79          /**
  80          * \brief 向DS1302相应的地址写入数据
  81          *
  82          * \param[in] addr : 要写入的地址
  83          * \param[in] dat  : 要写入的数据
  84          *
  85          * \return 无
  86          *         
  87          */
  88          void ds1302_write_data(unsigned char addr, unsigned char dat)
  89          {
  90   1        DS1302_CE   = 0;
  91   1          _nop_();
  92   1        DS1302_SCLK = 0;
  93   1      
  94   1        delay1us();
  95   1        DS1302_CE = 1;
  96   1        
  97   1        ds1302_write_spi(addr);
  98   1        ds1302_write_spi(dat);
  99   1        
 100   1        
 101   1      //  DS1302_SCLK = 1;
 102   1        DS1302_CE   = 0;
 103   1        
 104   1        delay1us();
 105   1        delay1us();
 106   1        delay1us();
 107   1        delay1us(); 
 108   1      }
 109          
 110          /**
 111          * \brief 读取DS1302相应地址中的值
 112          *
 113          * \param[in] addr : 要读取的地址
 114          *
 115          * \return 读出的数据
 116          *         
C51 COMPILER V9.56.0.0   DS1302                                                            05/27/2017 01:33:14 PAGE 3   

 117          */
 118          unsigned char ds1302_read_data (unsigned char addr)
 119          {
 120   1        unsigned char dat = 0;
 121   1        DS1302_CE   = 0;
 122   1        _nop_();
 123   1        _nop_();
 124   1        DS1302_SCLK = 0;
 125   1        delay1us();
 126   1        DS1302_CE = 1;
 127   1        _nop_();
 128   1        _nop_();
 129   1        
 130   1        ds1302_write_spi(addr);
 131   1        dat = ds1302_read_spi();
 132   1        
 133   1        DS1302_CE   = 0;
 134   1        _nop_();
 135   1        _nop_();
 136   1        DS1302_SCLK = 1;
 137   1        
 138   1        delay1us();
 139   1        delay1us();
 140   1        delay1us();
 141   1        delay1us(); 
 142   1        return dat;
 143   1      }
 144          
 145          /**
 146          * \brief 设置DS1302的初始时间
 147          *
 148          * \param[in] p_init_time : 初始化时间数组
 149          *
 150          * \return 无
 151          *         
 152          */
 153          void set_ds1302_initial_time (unsigned char code *p_init_time)
 154          {
 155   1        unsigned char i = 0;
 156   1      
 157   1        ds1302_write_data(0x8e, 0x00);  /* 写保护关闭 */
 158   1        for(i = 0; i < 7; i++) {
 159   2        
 160   2          ds1302_write_data(0x80 + i * 2, p_init_time[i]);
 161   2        }
 162   1        ds1302_write_data(0x8e, 0x80);  /* 写保护开 */
 163   1      
 164   1      }
 165          
 166          void set_ds1302_time (unsigned char  *p_init_time)
 167          {
 168   1        unsigned char i = 0;
 169   1      
 170   1        ds1302_write_data(0x8e, 0x00);  /* 写保护关闭 */
 171   1        for(i = 0; i < 7; i++) {
 172   2        
 173   2          ds1302_write_data(0x80 + i * 2, p_init_time[i]);
 174   2        }
 175   1        ds1302_write_data(0x8e, 0x80);  /* 写保护开 */
 176   1      
 177   1      }
 178          
C51 COMPILER V9.56.0.0   DS1302                                                            05/27/2017 01:33:14 PAGE 4   

 179          
 180          /**
 181          * \brief 获取DS1302的时钟值
 182          *
 183          * \param p_get_time ：一个7字节数组，存储 D[0]秒 + D[1]分 + D2时+ D[3]日 + 
 184          *                                         D[4]月 + D[5]星期 + D[6]年
 185          *
 186          * \return 无
 187          *         
 188          */
 189          void get_ds1302_time (unsigned char *p_get_time)
 190          {
 191   1        unsigned char i = 0; 
 192   1        
 193   1      //  EA = 0;               /* 这个很重要 */
 194   1          
 195   1        for (i = 0; i < 7; i++) {
 196   2        
 197   2          p_get_time[i] = ds1302_read_data(0x81 + i * 2);
 198   2          ds1302_read_data(0x81 + i * 2);    /* 执行一个空操作 */
 199   2        }
 200   1      //  EA = 1;
 201   1      }
 202          
 203          /**
 204          * \brief 初始化DS1302
 205          *
 206          * \param 无
 207          *
 208          * \return 无
 209          *         
 210          */
 211          void init_ds1302(void)
 212          {
 213   1        unsigned char temp = 0;
 214   1        DS1302_CE   = 0;
 215   1        DS1302_SCLK = 0;
 216   1        ds1302_write_data(0x8e, 0x00);
 217   1        ds1302_write_data(0x90, 0xa6);
 218   1      //  ds1302_write_data(0x80,0x00);  //开时钟 这个加上则秒每次开电都是从0开始
 219   1        ds1302_write_data(0x8e, 0x80);
 220   1        
 221   1        temp = ds1302_read_data(81);
 222   1      //  if(temp & 0x80) {
 223   1          set_ds1302_initial_time(__g_initial_time);
 224   1      //  }
 225   1        
 226   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
