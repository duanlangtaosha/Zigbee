C51 COMPILER V9.56.0.0   KEY                                                               05/24/2017 23:19:21 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Head) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\key.lst) TABS(2) OBJECT(.\Objects\key.obj)

line level    source

   1          /*******************************************************************************
   2          *                            STC51 MCU Module
   3          *                       ---------------------------
   4          *
   5          * Copyright (c) 2001-2012 duanlantaosha
   6          *
   7          * Chip      : STC89C52RC&STC12C5A60S2
   8          * OSC       : 11.0592M & 12M
   9          * Made  By  : duanlangtaosha
  10          * QQ        : 891650837
  11          * e-mail:   : 891650837@qq.com
  12          *******************************************************************************/
  13          
  14          /**
  15           * \file
  16           * \brief 独立按键扫描模块
  17           *
  18           * \note 支持最多添加8位独立按键
  19           *
  20           * \internal
  21           * \par Modification history
  22           * - 1.00 17-05-11  duanlangtaosha, first implementation.
  23           * \endinternal
  24           */
  25          
  26          #include "stc12c5a60s2.h"
  27          #include "key.h"
  28          
  29          /**
  30          * \brief 按键扫描
  31          *
  32          * \param 无
  33          *
  34          * \retval 0       :  无按键按下
  35          *         EN_KEY0 ： 按键0按下
  36          *         EN_KEY1 ： 按键1按下
  37          *         EN_KEY2 ： 按键2按下
  38          *         EN_KEY3 ： 按键3按下
  39          */
  40          unsigned char keyscan (void)
  41          { 
  42   1        static unsigned char s_keypress = 0, s_keyok = 0, s_keyup_press = 0, s_keyup = 1;
  43   1        unsigned char pin_arry = 0;
  44   1        unsigned char copy_pin0 = 0, copy_pin1 = 0, copy_pin2 = 0, copy_pin3 = 0;
  45   1        unsigned char keycode = 0;  /* 取键值 */
  46   1        /******************按键引脚的赋值与拷贝值*********************/
  47   1        PIN_KEY0 = PIN_KEY1 = PIN_KEY2 = PIN_KEY3 = 1;
  48   1        copy_pin0 = PIN_KEY0;
  49   1        copy_pin1 = PIN_KEY1;
  50   1        copy_pin2 = PIN_KEY2;
  51   1        copy_pin3 = PIN_KEY3;
  52   1        pin_arry = (copy_pin3 << 3 ) | (copy_pin2 << 2 ) | (copy_pin1 << 1 ) | (copy_pin0 ); /* 合并成一组 */
  53   1      /***********************按下检测****************************/   
  54   1         if ((0x0f != pin_arry) && (0 == s_keyok) && (1 == s_keyup)) {  /* 确认按键抬起后，按下才能有效 */
C51 COMPILER V9.56.0.0   KEY                                                               05/24/2017 23:19:21 PAGE 2   

  55   2          s_keypress++;   
  56   2         }
  57   1         else {
  58   2          s_keypress = 0;
  59   2         }
  60   1         if(SHAKE_TIME == s_keypress) {  /* 按下消抖 */
  61   2          keycode = pin_arry;  /* 取此时的键值 */
  62   2          s_keypress = 0;
  63   2          
  64   2          if (1 == s_keyup) {
  65   3            s_keyup = 0;
  66   3            s_keyok = 1;
  67   3            switch (keycode) {
  68   4            
  69   4              case 0x0e:  return EN_KEY0;
  70   4              case 0x0d:  return EN_KEY1;
  71   4              case 0x0b:  return EN_KEY2;
  72   4              case 0x07:  return EN_KEY3;
  73   4              default:  return 0;
  74   4            }
  75   3      //      return 1;
  76   3          }
  77   2         } 
  78   1      /***********************抬起检测****************************/ 
  79   1         if ((0x0f == (pin_arry & 0x0f)) && (1 == s_keyok)) {  /* 判断上次已经按下，且此时是抬起的状态 */
  80   2          s_keyup_press++;
  81   2         }
  82   1         else if((1 == s_keyok) && ((pin_arry & 0x0f) != 0x0f)) {
  83   2          s_keyup_press = 0;
  84   2         }
  85   1         if((SHAKE_TIME == s_keyup_press)) {    /* 抬起消抖完成 */
  86   2          s_keyup_press = 0;      
  87   2          if((s_keyok == 1) && ((pin_arry & 0x0f) == 0x0f)) {
  88   3           
  89   3            s_keyup = 1;
  90   3            s_keyok = 0;
  91   3           }
  92   2         }
  93   1         return 0;
  94   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    174    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
