C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Head) DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc12c5a60s2.h"
   2          #include "intrins.h"
   3          #include "uart.h"
   4          #include "uart2.h"
   5          #include "lcd12864.h"
   6          #include "ds18b20.h"
   7          #include "ds1302.h"
   8          #include "key.h"
   9          
  10          
  11          unsigned char choose_page = 0;
  12          
  13          /*主页*/
  14          extern uint8_t g_uart_sta;
  15          void home (void) 
  16          {
  17   1        
  18   1        lcd12864_write_cmd(0x01);
  19   1      
  20   1        lcd12864_set_window(0, 0);            
  21   1        lcd12864_write_string("主机温度:");
  22   1        lcd12864_set_window(0, 7);            
  23   1        lcd12864_write_string("℃");
  24   1        lcd12864_set_window(1, 0);
  25   1        lcd12864_write_string("从机温度:");
  26   1        lcd12864_set_window(1, 7);            
  27   1        lcd12864_write_string("℃");
  28   1        lcd12864_set_window(2, 0);
  29   1        lcd12864_write_string("日期:");
  30   1        lcd12864_set_window(2, 3);  
  31   1        lcd12864_write_string("");
  32   1        lcd12864_set_window(3, 0);
  33   1        lcd12864_write_string("时间:");
  34   1        lcd12864_set_window(3, 3);
  35   1        lcd12864_write_string("");
  36   1        while (1) {
  37   2          unsigned char ds1302_buf[7] = {0};  /* DS1302接收缓存区 */
  38   2          unsigned char keyval = keyscan(5);
  39   2          unsigned char temp = rd_temperature_i();  /* 读取温度 */
  40   2          
  41   2          float device_temp = 0.0;
  42   2          unsigned char control = 0;
  43   2          if (EN_KEY0 == keyval) {
  44   3          
  45   3            choose_page = 1; /* 进入主菜单*/
  46   3            break;
  47   3          }
  48   2            lcd12864_set_window(0, 5);
  49   2            lcd12864_write_data((temp / 10) | 0x30 );
  50   2            lcd12864_write_data((temp % 10) | 0x30 );
  51   2          
  52   2          
  53   2            if (1 == uartf_reciev_frame(&device_temp, &control)) {
  54   3              temp = (unsigned char)device_temp;
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 2   

  55   3              lcd12864_set_window(1, 5);
  56   3              lcd12864_write_data((temp / 10) | 0x30 );
  57   3              lcd12864_write_data((temp % 10) | 0x30 );
  58   3            }
  59   2            uart_send_byte(g_uart_sta);
  60   2            get_ds1302_time(ds1302_buf);
  61   2            
  62   2            /* 日期设置 */
  63   2            lcd12864_set_window(2, 3);
  64   2            
  65   2            /* 年 */
  66   2            lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
  67   2            lcd12864_write_data((ds1302_buf[6] & 0x0F) | 0x30 );
  68   2            lcd12864_write_string("-");
  69   2            
  70   2            /* 月 */
  71   2            lcd12864_write_data((ds1302_buf[4] >> 4) | 0x30 );
  72   2            lcd12864_write_data((ds1302_buf[4] & 0x0F) | 0x30 );
  73   2            lcd12864_write_string("-");
  74   2            
  75   2            /* 日 */
  76   2            lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
  77   2            lcd12864_write_data((ds1302_buf[3] & 0x0F) | 0x30 );
  78   2            
  79   2            /* 时间的设置 */
  80   2            lcd12864_set_window(3, 3);
  81   2            
  82   2            /* 时 */
  83   2            lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
  84   2            lcd12864_write_data((ds1302_buf[2] & 0x0F) | 0x30 );
  85   2            lcd12864_write_string(":");
  86   2            
  87   2            /* 分 */
  88   2            lcd12864_write_data((ds1302_buf[1] >> 4) | 0x30 );
  89   2            lcd12864_write_data((ds1302_buf[1] & 0x0F) | 0x30 );
  90   2            lcd12864_write_string(":");
  91   2            
  92   2            /* 秒 */
  93   2            lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
  94   2            lcd12864_write_data((ds1302_buf[0] & 0x0F) | 0x30 );
  95   2            
  96   2        }
  97   1      }
  98          
  99          /*主菜单*/
 100          void menu (void)
 101          {
 102   1        static unsigned char menu_save = 2;
 103   1        lcd12864_write_cmd(0x01);
 104   1        choose_page++;
 105   1        lcd12864_set_window(0, 0);
 106   1        lcd12864_write_string("≡≡主菜单≡≡");
 107   1        lcd12864_set_window(1, 0);
 108   1        lcd12864_write_string("1.家电");
 109   1        lcd12864_set_window(2, 0);
 110   1        lcd12864_write_string("2.设置");
 111   1        lcd12864_set_window(3, 0);
 112   1        lcd12864_write_string("3.其他");
 113   1        
 114   1        while (1) {
 115   2      
 116   2          unsigned char keyval = keyscan(5);  
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 3   

 117   2          if (EN_KEY1 == keyval) {  /* 菜单下选择 */
 118   3                
 119   3            choose_page++;
 120   3            menu_save = choose_page;
 121   3            if (choose_page == 5) {
 122   4              choose_page = 2;
 123   4              menu_save = choose_page;
 124   4            }
 125   3            
 126   3          } else if (EN_KEY2 == keyval) { /* 菜单上选择 */
 127   3            choose_page--;
 128   3            menu_save = choose_page;
 129   3            if (choose_page == 1) {
 130   4              choose_page = 4;
 131   4              menu_save = 4;
 132   4            }
 133   3          } else if (EN_KEY3 == keyval) {
 134   3            choose_page = 0;
 135   3            break;
 136   3          } else if (EN_KEY0 == keyval) {
 137   3            choose_page = menu_save;
 138   3              break;
 139   3          }
 140   2          
 141   2          switch (menu_save) {
 142   3            case 2:
 143   3              lcd12864_set_window(3, 3);
 144   3              lcd12864_write_data(32);
 145   3            
 146   3              lcd12864_set_window(2, 3);
 147   3              lcd12864_write_data(32);
 148   3            
 149   3              lcd12864_set_window(1, 3);
 150   3              lcd12864_write_data(17);
 151   3            break;
 152   3            
 153   3            case 3:
 154   3              lcd12864_set_window(1, 3);
 155   3              lcd12864_write_data(32);
 156   3            
 157   3              lcd12864_set_window(3, 3);
 158   3              lcd12864_write_data(32);
 159   3            
 160   3              lcd12864_set_window(2, 3);
 161   3              lcd12864_write_data(17);
 162   3              break;
 163   3            case 4:
 164   3              lcd12864_set_window(1, 3);
 165   3              lcd12864_write_data(32);  
 166   3            
 167   3              lcd12864_set_window(2, 3);
 168   3              lcd12864_write_data(32);
 169   3            
 170   3              lcd12864_set_window(3, 3);
 171   3              lcd12864_write_data(17);
 172   3              break;
 173   3          }
 174   2          
 175   2        }
 176   1      }
 177          
 178          
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 4   

 179          /* 家电 */
 180          void elec_app (void)
 181          {
 182   1        unsigned char elc_num = 0;
 183   1        
 184   1        unsigned char elc_sta = 0;
 185   1        lcd12864_write_cmd(0x01);
 186   1      
 187   1        lcd12864_set_window(0, 1);
 188   1        lcd12864_write_string("≡≡家电≡≡");
 189   1        lcd12864_set_window(1, 0);
 190   1        lcd12864_write_string("E1:OFF");
 191   1        lcd12864_set_window(2, 0);
 192   1        lcd12864_write_string("E2:OFF");
 193   1        lcd12864_set_window(1, 4);
 194   1        lcd12864_write_string("E3:OFF");
 195   1        lcd12864_set_window(2, 4);
 196   1        lcd12864_write_string("E4:OFF");
 197   1        while (1) {
 198   2          float temp = 10.0;
 199   2          unsigned char keyval = keyscan(2);
 200   2          
 201   2          /* 获取当前从机家用电器的状态 */
 202   2          if (1 == uartf_reciev_frame(&temp, &elc_sta)) {
 203   3            if(elc_sta & 0x01) {
 204   4              lcd12864_set_window(1, 0);
 205   4              lcd12864_write_string("E1:ON ");
 206   4            } else {
 207   4              lcd12864_set_window(1, 0);
 208   4              lcd12864_write_string("E1:OFF");
 209   4            }
 210   3            
 211   3            if(elc_sta & 0x02) {
 212   4              lcd12864_set_window(2, 0);
 213   4              lcd12864_write_string("E2:ON ");
 214   4            } else {
 215   4              lcd12864_set_window(2, 0);
 216   4              lcd12864_write_string("E2:OFF");
 217   4            }
 218   3            
 219   3            if(elc_sta & 0x04) {
 220   4              lcd12864_set_window(1, 4);
 221   4              lcd12864_write_string("E3:ON ");
 222   4            } else {
 223   4              lcd12864_set_window(1, 4);
 224   4              lcd12864_write_string("E3:OFF");
 225   4            }
 226   3      
 227   3            if(elc_sta & 0x08) {
 228   4              lcd12864_set_window(2, 4);
 229   4              lcd12864_write_string("E4:ON ");
 230   4            } else {
 231   4              lcd12864_set_window(2, 4);
 232   4              lcd12864_write_string("E4:OFF");
 233   4            }
 234   3          } else {
 235   3            
 236   3            /* 不加上这句校验和就会永远的出错 */
 237   3      //      uart_send_string("eorr\r\n");
 238   3          }
 239   2          
 240   2          
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 5   

 241   2          /* 返回上一页 */
 242   2          if (EN_KEY3 == keyval) {
 243   3            choose_page = 1;
 244   3            break;
 245   3          } else if (EN_KEY1 == keyval) {
 246   3            elc_num++;
 247   3            if(elc_num == 5) {
 248   4              elc_num = 1;
 249   4            }
 250   3              switch (elc_num) {
 251   4      
 252   4              case 1:
 253   4                lcd12864_set_window(2, 7);
 254   4                lcd12864_write_data(32);  
 255   4              
 256   4                lcd12864_set_window(1, 3);
 257   4                lcd12864_write_data(17);
 258   4                
 259   4                break;
 260   4              case 2:
 261   4                
 262   4                lcd12864_set_window(1, 3);
 263   4                lcd12864_write_data(32);
 264   4              
 265   4                lcd12864_set_window(2, 3);
 266   4                lcd12864_write_data(17);
 267   4                break;
 268   4              case 3:
 269   4                lcd12864_set_window(2, 3);
 270   4                lcd12864_write_data(32);
 271   4              
 272   4                lcd12864_set_window(1, 7);
 273   4                lcd12864_write_data(17);
 274   4                break;
 275   4              case 4:
 276   4                lcd12864_set_window(1, 7);
 277   4                lcd12864_write_data(32);
 278   4              
 279   4                lcd12864_set_window(2, 7);
 280   4                lcd12864_write_data(17);
 281   4                break;
 282   4              default:
 283   4                break;
 284   4            }
 285   3          } else if (EN_KEY0 == keyval) {
 286   3              switch (elc_num) {
 287   4              case 1:
 288   4                if (elc_sta & 0x01) {
 289   5                  elc_sta &= ~0x01;
 290   5                } else {
 291   5                  elc_sta |= 0x01;
 292   5                }
 293   4                uart_send_frame(0.0, elc_sta);
 294   4                    
 295   4                break;
 296   4              case 2:
 297   4                if (elc_sta & 0x02) {
 298   5                  elc_sta &= ~0x02;
 299   5                } else {
 300   5                  elc_sta |= 0x02;
 301   5                }
 302   4                uart_send_frame(0.0, elc_sta);
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 6   

 303   4      
 304   4                break;
 305   4              case 3:
 306   4                if (elc_sta & 0x04) {
 307   5                  elc_sta &= ~0x04;
 308   5                } else {
 309   5                  elc_sta |= 0x04;
 310   5                }
 311   4                uart_send_frame(0.0, elc_sta);
 312   4                break;
 313   4              case 4:
 314   4                if (elc_sta & 0x08) {
 315   5                  elc_sta &= ~0x08;
 316   5                } else {
 317   5                  elc_sta |= 0x08;
 318   5                }
 319   4                uart_send_frame(0.0, elc_sta);
 320   4                break;
 321   4              default:
 322   4                break;
 323   4            }
 324   3          }
 325   2        }
 326   1      
 327   1      }
 328          
 329          void setting (void)
 330          {
 331   1        unsigned char point_select = 0;
 332   1        lcd12864_write_cmd(0x01);
 333   1        lcd12864_set_window(0, 1);
 334   1        lcd12864_write_string("≡≡设置≡≡");
 335   1        lcd12864_set_window(1, 0);
 336   1        lcd12864_write_string("1.时间");
 337   1        lcd12864_set_window(2, 0);
 338   1        lcd12864_write_string("2.温度");
 339   1        while (1) {
 340   2          unsigned char keyval = keyscan(5);
 341   2      //    lcd12864_set_window(0, 0);
 342   2      //    lcd12864_write_string("设置");
 343   2          
 344   2          if (EN_KEY0 == keyval) {
 345   3            if (point_select == 0) {
 346   4              choose_page = 5;
 347   4            } else {
 348   4            
 349   4            }
 350   3            break;
 351   3          }
 352   2      
 353   2              
 354   2          if (EN_KEY3 == keyval) {
 355   3            choose_page = 1;
 356   3            break;
 357   3          }
 358   2        }
 359   1      }
 360          
 361          void other (void )
 362          {
 363   1        lcd12864_write_cmd(0x01);
 364   1        while (1) {
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 7   

 365   2          
 366   2          unsigned char keyval = keyscan(5);
 367   2          if (EN_KEY3 == keyval) {
 368   3            choose_page = 1;
 369   3            break;
 370   3          }
 371   2          lcd12864_set_window(0, 0);
 372   2          lcd12864_write_string("其他");
 373   2        
 374   2        }
 375   1      
 376   1      }
 377          
 378          
 379          
 380          void Timer0Init(void)   //1??@11.0592MHz
 381          {
 382   1      //  AUXR |= 0x80;   
 383   1        TMOD &= 0xF0;   
 384   1        TL0 = 0xCD;   
 385   1        TH0 = 0xD4;   
 386   1        TF0 = 0;    
 387   1        TR0 = 1;    
 388   1        
 389   1        EA = 1;
 390   1        ET0 = 1;
 391   1      }
 392          
 393          bit refresh = 0;
 394          void isr_timer0 (void) interrupt 1
 395          {
 396   1        static unsigned int count = 0;
 397   1        TF0 = 0;
 398   1        TL0 = 0xCD;   
 399   1        TH0 = 0xD4; 
 400   1      //  TH0 = (65536 - 1000) >> 8;
 401   1      //  TL0 = (65536- 1000);
 402   1        
 403   1        count++;
 404   1        if (500 == count) {
 405   2          count = 0;
 406   2          refresh = !refresh;
 407   2        }
 408   1      }
 409          
 410          
 411          void date_time_setting (void) 
 412          {
 413   1        unsigned char point_select = 0;
 414   1        unsigned char ds1302_buf[7] = {0};  /* DS1302接收缓存区 */
 415   1        lcd12864_write_cmd(0x01);
 416   1        
 417   1        get_ds1302_time(ds1302_buf);
 418   1        
 419   1        lcd12864_set_window(0, 0);
 420   1        lcd12864_write_string("≡时间日期设置≡");
 421   1        
 422   1        lcd12864_set_window(1, 0);
 423   1        lcd12864_write_string("日期  ");
 424   1        
 425   1        lcd12864_set_window(2, 0);
 426   1        lcd12864_write_string("时间  ");
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 8   

 427   1        
 428   1        
 429   1        /* 日期设置 */
 430   1        lcd12864_set_window(1, 3);
 431   1        
 432   1        /* 年 */
 433   1        lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
 434   1        lcd12864_write_data((ds1302_buf[6] & 0x0F) | 0x30 );
 435   1        lcd12864_write_string("-");
 436   1        
 437   1        /* 月 */
 438   1        lcd12864_write_data((ds1302_buf[4] >> 4) | 0x30 );
 439   1        lcd12864_write_data((ds1302_buf[4] & 0x0F) | 0x30 );
 440   1        lcd12864_write_string("-");
 441   1        
 442   1        /* 日 */
 443   1        lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
 444   1        lcd12864_write_data((ds1302_buf[3] & 0x0F) | 0x30 );
 445   1        
 446   1        /* 时间的设置 */
 447   1        lcd12864_set_window(2, 3);
 448   1        
 449   1        /* 时 */
 450   1        lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
 451   1        lcd12864_write_data((ds1302_buf[2] & 0x0F) | 0x30 );
 452   1        lcd12864_write_string(":");
 453   1        
 454   1        /* 分 */
 455   1        lcd12864_write_data((ds1302_buf[1] >> 4) | 0x30 );
 456   1        lcd12864_write_data((ds1302_buf[1] & 0x0F) | 0x30 );
 457   1        lcd12864_write_string(":");
 458   1        
 459   1        /* 秒 */
 460   1        lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
 461   1        lcd12864_write_data((ds1302_buf[0] & 0x0F) | 0x30 );
 462   1          
 463   1        Timer0Init();
 464   1        while (1) {
 465   2          
 466   2          unsigned char keyval = keyscan(5);
 467   2          
 468   2          switch (point_select) {
 469   3          
 470   3            case 0 :
 471   3              if ( refresh == 1) {
 472   4                lcd12864_set_window(1, 3);
 473   4                lcd12864_write_data(32);
 474   4              } else {
 475   4                lcd12864_set_window(1, 3);
 476   4                lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
 477   4              }
 478   3              break;
 479   3            case 1 :
 480   3              if ( refresh == 1) {
 481   4                lcd12864_set_window(1, 3);
 482   4                lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
 483   4                lcd12864_write_data(32);
 484   4              } else {
 485   4                lcd12864_set_window(1, 3);
 486   4                lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
 487   4                lcd12864_write_data((ds1302_buf[6] & 0x0F) | 0x30 );
 488   4              }
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 9   

 489   3              break;
 490   3            case 2 :
 491   3              if ( refresh == 1) {
 492   4                lcd12864_set_window(1, 4);
 493   4                lcd12864_write_string("-");
 494   4                lcd12864_write_data(32);
 495   4              } else {
 496   4                lcd12864_set_window(1, 4);
 497   4                lcd12864_write_string("-");
 498   4                lcd12864_write_data((ds1302_buf[4] >> 4) | 0x30 );
 499   4              }
 500   3              break;
 501   3            case 3 :
 502   3              if ( refresh == 1) {
 503   4                lcd12864_set_window(1, 5);
 504   4                lcd12864_write_data(32);
 505   4              } else {
 506   4                lcd12864_set_window(1, 5);
 507   4                lcd12864_write_data((ds1302_buf[4] & 0x0F) | 0x30 );
 508   4              }
 509   3              break;
 510   3            case 4 :
 511   3              if ( refresh == 1) {
 512   4                lcd12864_set_window(1, 6);
 513   4                lcd12864_write_data(32);
 514   4              } else {
 515   4                lcd12864_set_window(1, 6);
 516   4                lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
 517   4              }
 518   3              break;
 519   3            case 5 :
 520   3              if ( refresh == 1) {
 521   4                lcd12864_set_window(1, 6);
 522   4                lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
 523   4                lcd12864_write_data(32);
 524   4              } else {
 525   4                lcd12864_set_window(1, 6);
 526   4                lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
 527   4                lcd12864_write_data((ds1302_buf[3] & 0x0F) | 0x30 );
 528   4              }
 529   3              break;
 530   3            case 6 :
 531   3              if ( refresh == 1) {
 532   4                lcd12864_set_window(2, 3);
 533   4                lcd12864_write_data(32);
 534   4              } else {
 535   4                lcd12864_set_window(2, 3);
 536   4                lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
 537   4              }
 538   3              break;
 539   3            case 7 :
 540   3              if ( refresh == 1) {
 541   4                lcd12864_set_window(2, 3);
 542   4                lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
 543   4                lcd12864_write_data(32);
 544   4              } else {
 545   4                lcd12864_set_window(2, 3);
 546   4                lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
 547   4                lcd12864_write_data((ds1302_buf[2] & 0x0F) | 0x30 );
 548   4              }
 549   3              break;
 550   3            case 8 :
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 10  

 551   3              if ( refresh == 1) {
 552   4                lcd12864_set_window(2, 4);
 553   4                lcd12864_write_string(":");
 554   4                lcd12864_write_data(32);
 555   4              } else {
 556   4                lcd12864_set_window(2, 4);
 557   4                lcd12864_write_string(":");
 558   4                lcd12864_write_data((ds1302_buf[1] >> 4) | 0x30 );
 559   4              }
 560   3              break;
 561   3            case 9 :
 562   3              if ( refresh == 1) {
 563   4                lcd12864_set_window(2, 5);
 564   4                lcd12864_write_data(32);
 565   4              } else {
 566   4                lcd12864_set_window(2, 5);
 567   4                lcd12864_write_data((ds1302_buf[1] & 0x0F) | 0x30 );
 568   4              }
 569   3              break;
 570   3            case 10:
 571   3              if ( refresh == 1) {
 572   4                lcd12864_set_window(2, 6);
 573   4                lcd12864_write_data(32);
 574   4              } else {
 575   4                lcd12864_set_window(2, 6);
 576   4                lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
 577   4              }
 578   3              break;
 579   3            case 11:
 580   3              if ( refresh == 1) {
 581   4                lcd12864_set_window(2, 6);
 582   4                lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
 583   4                lcd12864_write_data(32);
 584   4              } else {
 585   4                lcd12864_set_window(2, 6);
 586   4                lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
 587   4                lcd12864_write_data((ds1302_buf[0] & 0x0F) | 0x30 );
 588   4              }
 589   3              break;
 590   3            default:
 591   3              break;
 592   3          }
 593   2          
 594   2      //    if ( refresh == 1) {
 595   2      //      lcd12864_set_window(1, 3);
 596   2      //      lcd12864_write_data(32);
 597   2      //    } else {
 598   2      //      lcd12864_set_window(1, 3);
 599   2      //      lcd12864_write_data(0x32);
 600   2      //    }
 601   2          
 602   2          if (EN_KEY2 == keyval) {
 603   3            point_select++;
 604   3            
 605   3            if (point_select == 12) {
 606   4              point_select = 0;
 607   4            }
 608   3            /* 日期设置 */
 609   3            lcd12864_set_window(1, 3);
 610   3            
 611   3            /* 年 */
 612   3            lcd12864_write_data((ds1302_buf[6] >> 4) | 0x30 );
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 11  

 613   3            lcd12864_write_data((ds1302_buf[6] & 0x0F) | 0x30 );
 614   3            lcd12864_write_string("-");
 615   3            
 616   3            /* 月 */
 617   3            lcd12864_write_data((ds1302_buf[4] >> 4) | 0x30 );
 618   3            lcd12864_write_data((ds1302_buf[4] & 0x0F) | 0x30 );
 619   3            lcd12864_write_string("-");
 620   3            
 621   3            /* 日 */
 622   3            lcd12864_write_data((ds1302_buf[3] >> 4) | 0x30 );
 623   3            lcd12864_write_data((ds1302_buf[3] & 0x0F) | 0x30 );
 624   3            
 625   3            /* 时间的设置 */
 626   3            lcd12864_set_window(2, 3);
 627   3            
 628   3            /* 时 */
 629   3            lcd12864_write_data((ds1302_buf[2] >> 4) | 0x30 );
 630   3            lcd12864_write_data((ds1302_buf[2] & 0x0F) | 0x30 );
 631   3            lcd12864_write_string(":");
 632   3            
 633   3            /* 分 */
 634   3            lcd12864_write_data((ds1302_buf[1] >> 4) | 0x30 );
 635   3            lcd12864_write_data((ds1302_buf[1] & 0x0F) | 0x30 );
 636   3            lcd12864_write_string(":");
 637   3            
 638   3            /* 秒 */
 639   3            lcd12864_write_data((ds1302_buf[0] >> 4) | 0x30 );
 640   3            lcd12864_write_data((ds1302_buf[0] & 0x0F) | 0x30 );
 641   3          }
 642   2          if (EN_KEY0 == keyval) {
 643   3            switch (point_select) {
 644   4              case 0 :
 645   4                ds1302_buf[6] = (ds1302_buf[6] & 0x0F) | ((ds1302_buf[6] >> 4) + 1) << 4;
 646   4                if((ds1302_buf[6] >> 4) > 9 ) {
 647   5                ds1302_buf[6] = ds1302_buf[6] & 0x0F;
 648   5                }
 649   4                break;
 650   4              case 1 :
 651   4                ds1302_buf[6] = (ds1302_buf[6] & 0xF0) | ((ds1302_buf[6] & 0x0F) + 1) ;
 652   4                if((ds1302_buf[6] & 0x0F) > 9 ) {
 653   5                ds1302_buf[6] = ds1302_buf[6] & 0xF0;
 654   5                }
 655   4                break;
 656   4              case 2 :
 657   4                ds1302_buf[4] = (ds1302_buf[4] & 0x0F) | ((ds1302_buf[4] >> 4) + 1) << 4;
 658   4                if((ds1302_buf[4] >> 4) > 9 ) {
 659   5                ds1302_buf[4] = ds1302_buf[6] & 0x0F;
 660   5                }
 661   4                break;
 662   4              case 3 :
 663   4                ds1302_buf[4] = (ds1302_buf[4] & 0xF0) | ((ds1302_buf[4] & 0x0F) + 1) ;
 664   4                if((ds1302_buf[4] & 0x0F) > 9 ) {
 665   5                ds1302_buf[4] = ds1302_buf[4] & 0xF0;
 666   5                }
 667   4                break;                
 668   4              case 4 :
 669   4                ds1302_buf[3] = (ds1302_buf[3] & 0x0F) | ((ds1302_buf[3] >> 4) + 1) << 4;
 670   4                if((ds1302_buf[3] >> 4) > 9 ) {
 671   5                ds1302_buf[3] = ds1302_buf[3] & 0x0F;
 672   5                }
 673   4                break;    
 674   4              case 5 :
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 12  

 675   4                ds1302_buf[3] = (ds1302_buf[3] & 0xF0) | ((ds1302_buf[3] & 0x0F) + 1) ;
 676   4                if((ds1302_buf[3] & 0x0F) > 9 ) {
 677   5                ds1302_buf[3] = ds1302_buf[3] & 0xF0;
 678   5                }
 679   4                break;
 680   4              case 6 :
 681   4                ds1302_buf[2] = (ds1302_buf[2] & 0x0F) | ((ds1302_buf[2] >> 4) + 1) << 4;
 682   4                if((ds1302_buf[2] >> 4) > 2 ) {
 683   5                ds1302_buf[2] = ds1302_buf[2] & 0x0F;
 684   5                }
 685   4                break;
 686   4              case 7 :
 687   4                ds1302_buf[2] = (ds1302_buf[2] & 0xF0) | ((ds1302_buf[2] & 0x0F) + 1) ;
 688   4                if((ds1302_buf[2] & 0x0F) > 9 ) {
 689   5                ds1302_buf[2] = ds1302_buf[2] & 0xF0;
 690   5                }
 691   4                break;
 692   4              case 8 :
 693   4                ds1302_buf[1] = (ds1302_buf[1] & 0x0F) | ((ds1302_buf[1] >> 4) + 1) << 4;
 694   4                if((ds1302_buf[1] >> 4) > 5 ) {
 695   5                ds1302_buf[1] = ds1302_buf[1] & 0x0F;
 696   5                }
 697   4                break;
 698   4              case 9 :
 699   4                ds1302_buf[1] = (ds1302_buf[1] & 0xF0) | ((ds1302_buf[1] & 0x0F) + 1) ;
 700   4                if((ds1302_buf[1] & 0x0F) > 9 ) {
 701   5                ds1302_buf[1] = ds1302_buf[1] & 0xF0;
 702   5                }
 703   4                break;
 704   4              case 10 :
 705   4                ds1302_buf[0] = (ds1302_buf[0] & 0x0F) | ((ds1302_buf[0] >> 4) + 1) << 4;
 706   4                if((ds1302_buf[0] >> 4) > 5 ) {
 707   5                ds1302_buf[0] = ds1302_buf[0] & 0x0F;
 708   5                }
 709   4                break;
 710   4              case 11 :
 711   4                ds1302_buf[0] = (ds1302_buf[0] & 0xF0) | ((ds1302_buf[0] & 0x0F) + 1) ;
 712   4                if((ds1302_buf[0] & 0x0F) > 9 ) {
 713   5                ds1302_buf[0] = ds1302_buf[0] & 0xF0;
 714   5                }
 715   4                break;
 716   4              default:
 717   4                break;
 718   4            }
 719   3          }
 720   2          if (EN_KEY3 == keyval) {
 721   3            choose_page = 1;
 722   3            set_ds1302_time(&ds1302_buf);
 723   3            
 724   3            TR0 = 0;
 725   3            ET0 = 0;
 726   3            break;
 727   3          }
 728   2        }
 729   1      }
 730          
 731          
 732          void main (void)
 733          {
 734   1      
 735   1        P2M1 = 0x00;
 736   1        P2M0 = 0xFF;
C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 13  

 737   1        uart_init();
 738   1        uart2_init();
 739   1        lcd12864_init ();
 740   1        init_ds18b20();
 741   1        init_ds1302();
 742   1        
 743   1        while (1) {
 744   2          
 745   2          unsigned char *p = "abcd";
 746   2          unsigned char buuu[5]={0x11 ,0x22, 0x33,0x44,0x55};
 747   2          float a = 18.5,c = 0.0;
 748   2          unsigned char b = 0x01, d = 0;
 749   2      
 750   2      
 751   2      //    if(uartf_reciev_frame(&c, &d))
 752   2      //    {
 753   2      //    
 754   2      //    uart_send_byte(c/10 + 0x30);
 755   2      //    uart_send_byte((unsigned char)c%10 + 0x30);
 756   2      //    uart_send_byte((unsigned char)(c*10)%10 +0x30);
 757   2      //    uart_send_byte('\r');
 758   2      //    uart_send_byte('\n');
 759   2      //    uart_send_byte(d + 0x30);
 760   2      //    }
 761   2      //    uart2_send_string("abcdefg");
 762   2      
 763   2          
 764   2          switch (choose_page) {
 765   3          
 766   3          case 0:
 767   3            home () ;
 768   3      //    date_time_setting();
 769   3            break;
 770   3          case 1:
 771   3            menu();
 772   3            break;
 773   3          case 2:
 774   3            elec_app();
 775   3            break;
 776   3            
 777   3          case 3:
 778   3            setting();
 779   3            break;
 780   3          case 4:
 781   3            other();
 782   3            break;
 783   3          case 5:
 784   3            date_time_setting();
 785   3            break;
 786   3            default:
 787   3              break;
 788   3          
 789   3          }
 790   2      
 791   2          
 792   2        }
 793   1      
 794   1      }
 795          
 796          
 797          

C51 COMPILER V9.56.0.0   MAIN                                                              05/27/2017 01:40:52 PAGE 14  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2828    ----
   CONSTANT SIZE    =    232    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
