C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Head) DEBUG OBJECTEXTEND
                    - PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "stc12c5a60s2.h"
   2          #include "intrins.h"
   3          #include "uart.h"
   4          #include "uart2.h"
   5          #include "lcd12864.h"
   6          #include "ds18b20.h"
   7          #include "ds1302.h"
   8          #include "key.h"
   9          
  10          
  11          unsigned char choose_page = 0;
  12          
  13          /*主页*/
  14          extern uint8_t g_uart_sta;
  15          void home (void) 
  16          {
  17   1        
  18   1        lcd12864_write_cmd(0x01);
  19   1      
  20   1        lcd12864_set_window(0, 0);            
  21   1        lcd12864_write_string("主机温度:");
  22   1        lcd12864_set_window(0, 7);            
  23   1        lcd12864_write_string("℃");
  24   1        lcd12864_set_window(1, 0);
  25   1        lcd12864_write_string("从机温度:");
  26   1        lcd12864_set_window(1, 7);            
  27   1        lcd12864_write_string("℃");
  28   1        lcd12864_set_window(2, 0);
  29   1        lcd12864_write_string("日期:");
  30   1        lcd12864_set_window(2, 3);  
  31   1        lcd12864_write_string("");
  32   1        lcd12864_set_window(3, 0);
  33   1        lcd12864_write_string("时间:");
  34   1        lcd12864_set_window(3, 3);
  35   1        lcd12864_write_string("");
  36   1        while (1) {
  37   2          unsigned char ds1302_buf[7] = {0};
  38   2          unsigned char keyval = keyscan();
  39   2      //    unsigned char temp = rd_temperature_i();
  40   2          unsigned char temp = 0;
  41   2          
  42   2          float device_temp = 0.0;
  43   2          unsigned char control = 0;
  44   2          if (EN_KEY0 == keyval) {
  45   3          
  46   3            choose_page = 1; /* 进入主菜单*/
  47   3            break;
  48   3          }
  49   2            lcd12864_set_window(0, 5);
  50   2            lcd12864_write_data((temp / 10) | 0x30 );
  51   2            lcd12864_write_data((temp % 10) | 0x30 );
  52   2          
  53   2          
  54   2            if (uartf_reciev_frame(&device_temp, &control)) {
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 2   

  55   3              temp = (unsigned char)device_temp;
  56   3              lcd12864_set_window(1, 5);
  57   3              lcd12864_write_data((temp / 10) | 0x30 );
  58   3              lcd12864_write_data((temp % 10) | 0x30 );
  59   3              
  60   3              //********************************************************************************************
  61   3      //        uart_send_byte(control);
  62   3              uart_send_byte('a');
  63   3      //        g_uart_sta = 0;
  64   3            }
  65   2            uart_send_byte(g_uart_sta);
  66   2            get_ds1302_time(ds1302_buf);
  67   2            lcd12864_set_window(3, 3);
  68   2            lcd12864_write_data((ds1302_buf[2] / 10) | 0x30 );
  69   2            lcd12864_write_data((ds1302_buf[2] % 10) | 0x30 );
  70   2            lcd12864_write_string(":");
  71   2            lcd12864_write_data((ds1302_buf[1] / 10) | 0x30 );
  72   2            lcd12864_write_data((ds1302_buf[1] % 10) | 0x30 );
  73   2            lcd12864_write_string(":");
  74   2            lcd12864_write_data((ds1302_buf[0] / 10) | 0x30 );
  75   2            lcd12864_write_data((ds1302_buf[0] % 10) | 0x30 );
  76   2            
  77   2        }
  78   1      }
  79          
  80          /*主菜单*/
  81          void menu (void)
  82          {
  83   1        lcd12864_write_cmd(0x01);
  84   1        choose_page++;
  85   1        lcd12864_set_window(0, 0);
  86   1        lcd12864_write_string("≡≡主菜单≡≡");
  87   1        lcd12864_set_window(1, 0);
  88   1        lcd12864_write_string("1.家电");
  89   1        lcd12864_set_window(2, 0);
  90   1        lcd12864_write_string("2.设置");
  91   1        lcd12864_set_window(3, 0);
  92   1        lcd12864_write_string("3.其他");
  93   1        
  94   1        while (1) {
  95   2      
  96   2          unsigned char keyval = keyscan(); 
  97   2          if (EN_KEY1 == keyval) {  /* 菜单下选择 */
  98   3                
  99   3            choose_page++;
 100   3            if (choose_page == 5) {
 101   4              choose_page = 2;
 102   4            }
 103   3            
 104   3          } else if (EN_KEY2 == keyval) { /* 菜单上选择 */
 105   3            choose_page--;
 106   3            if (choose_page == 1) {
 107   4              choose_page = 4;
 108   4            }
 109   3          } else if (EN_KEY3 == keyval) {
 110   3            choose_page = 0;
 111   3            break;
 112   3          } else if (EN_KEY0 == keyval) {
 113   3              break;
 114   3          }
 115   2          
 116   2          switch (choose_page) {
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 3   

 117   3            case 2:
 118   3              lcd12864_set_window(3, 3);
 119   3              lcd12864_write_data(32);
 120   3            
 121   3              lcd12864_set_window(2, 3);
 122   3              lcd12864_write_data(32);
 123   3            
 124   3              lcd12864_set_window(1, 3);
 125   3              lcd12864_write_data(17);
 126   3            break;
 127   3            
 128   3            case 3:
 129   3              lcd12864_set_window(1, 3);
 130   3              lcd12864_write_data(32);
 131   3            
 132   3              lcd12864_set_window(3, 3);
 133   3              lcd12864_write_data(32);
 134   3            
 135   3              lcd12864_set_window(2, 3);
 136   3              lcd12864_write_data(17);
 137   3              break;
 138   3            case 4:
 139   3              lcd12864_set_window(1, 3);
 140   3              lcd12864_write_data(32);  
 141   3            
 142   3              lcd12864_set_window(2, 3);
 143   3              lcd12864_write_data(32);
 144   3            
 145   3              lcd12864_set_window(3, 3);
 146   3              lcd12864_write_data(17);
 147   3              break;
 148   3          }
 149   2          
 150   2        }
 151   1      }
 152          
 153          
 154          void elec_app (void)
 155          {
 156   1        unsigned char elc_num = 0;
 157   1        
 158   1      //  float temp = 0.0;
 159   1        unsigned char elc_sta = 0;
 160   1        lcd12864_write_cmd(0x01);
 161   1      
 162   1        lcd12864_set_window(0, 1);
 163   1        lcd12864_write_string("≡≡家电≡≡");
 164   1        lcd12864_set_window(1, 0);
 165   1        lcd12864_write_string("E1:OFF");
 166   1        lcd12864_set_window(2, 0);
 167   1        lcd12864_write_string("E2:OFF");
 168   1        lcd12864_set_window(1, 4);
 169   1        lcd12864_write_string("E3:OFF");
 170   1        lcd12864_set_window(2, 4);
 171   1        lcd12864_write_string("E4:OFF");
 172   1        while (1) {
 173   2          float temp = 10.0;
 174   2          unsigned char keyval = keyscan();
 175   2          
 176   2          /* 获取当前从机家用电器的状态 */
 177   2          if (uartf_reciev_frame(&temp, &elc_sta)) {
 178   3            
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 4   

 179   3            //****************************************************************************
 180   3      //      uart_send_byte(elc_sta);
 181   3            if(elc_sta & 0x01) {
 182   4              lcd12864_set_window(1, 0);
 183   4              lcd12864_write_string("E1:ON ");
 184   4            } else {
 185   4              lcd12864_set_window(1, 0);
 186   4              lcd12864_write_string("E1:OFF");
 187   4            }
 188   3            
 189   3            if(elc_sta & 0x02) {
 190   4              lcd12864_set_window(2, 0);
 191   4              lcd12864_write_string("E2:ON ");
 192   4            } else {
 193   4              lcd12864_set_window(2, 0);
 194   4              lcd12864_write_string("E2:OFF");
 195   4            }
 196   3            
 197   3            if(elc_sta & 0x04) {
 198   4              lcd12864_set_window(1, 4);
 199   4              lcd12864_write_string("E3:ON ");
 200   4            } else {
 201   4              lcd12864_set_window(1, 4);
 202   4              lcd12864_write_string("E3:OFF");
 203   4            }
 204   3      
 205   3            if(elc_sta & 0x08) {
 206   4              lcd12864_set_window(2, 4);
 207   4              lcd12864_write_string("E4:ON ");
 208   4            } else {
 209   4              lcd12864_set_window(2, 4);
 210   4              lcd12864_write_string("E4:OFF");
 211   4            }
 212   3          } else {
 213   3            
 214   3            /* 不加上这句校验和就会永远的出错 */
 215   3            uart_send_string("eorr\r\n");
 216   3          }
 217   2          
 218   2          
 219   2          /* 返回上一页 */
 220   2          if (EN_KEY3 == keyval) {
 221   3            choose_page = 1;
 222   3            break;
 223   3          } else if (EN_KEY1 == keyval) {
 224   3            elc_num++;
 225   3            if(elc_num == 5) {
 226   4              elc_num = 1;
 227   4            }
 228   3              switch (elc_num) {
 229   4      
 230   4              case 1:
 231   4                lcd12864_set_window(2, 7);
 232   4                lcd12864_write_data(32);  
 233   4              
 234   4                lcd12864_set_window(1, 3);
 235   4                lcd12864_write_data(17);
 236   4                
 237   4                break;
 238   4              case 2:
 239   4                
 240   4                lcd12864_set_window(1, 3);
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 5   

 241   4                lcd12864_write_data(32);
 242   4              
 243   4                lcd12864_set_window(2, 3);
 244   4                lcd12864_write_data(17);
 245   4                break;
 246   4              case 3:
 247   4                lcd12864_set_window(2, 3);
 248   4                lcd12864_write_data(32);
 249   4              
 250   4                lcd12864_set_window(1, 7);
 251   4                lcd12864_write_data(17);
 252   4                break;
 253   4              case 4:
 254   4                lcd12864_set_window(1, 7);
 255   4                lcd12864_write_data(32);
 256   4              
 257   4                lcd12864_set_window(2, 7);
 258   4                lcd12864_write_data(17);
 259   4                break;
 260   4              default:
 261   4                break;
 262   4            }
 263   3          } else if (EN_KEY0 == keyval) {
 264   3              switch (elc_num) {
 265   4              case 1:
 266   4                if (elc_sta & 0x01) {
 267   5                  elc_sta &= ~0x01;
 268   5                } else {
 269   5                  elc_sta |= 0x01;
 270   5                }
 271   4                uart_send_frame(0.0, elc_sta);
 272   4                    
 273   4                break;
 274   4              case 2:
 275   4                
 276   4      
 277   4                break;
 278   4              case 3:
 279   4      
 280   4                break;
 281   4              case 4:
 282   4      
 283   4                break;
 284   4              default:
 285   4                break;
 286   4            }
 287   3          }
 288   2        }
 289   1      
 290   1      }
 291          
 292          void setting (void)
 293          {
 294   1        lcd12864_write_cmd(0x01);
 295   1        while (1) {
 296   2          unsigned char keyval = keyscan();
 297   2          lcd12864_set_window(0, 0);
 298   2          lcd12864_write_string("设置");
 299   2          
 300   2          
 301   2              
 302   2          if (EN_KEY3 == keyval) {
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 6   

 303   3            choose_page = 1;
 304   3            break;
 305   3          }
 306   2        }
 307   1      }
 308          
 309          void other (void )
 310          {
 311   1        lcd12864_write_cmd(0x01);
 312   1        while (1) {
 313   2          
 314   2          unsigned char keyval = keyscan();
 315   2          if (EN_KEY3 == keyval) {
 316   3            choose_page = 1;
 317   3            break;
 318   3          }
 319   2          lcd12864_set_window(0, 0);
 320   2          lcd12864_write_string("其他");
 321   2        
 322   2        }
 323   1      
 324   1      }
 325          
 326          
 327          
 328          
 329          void main (void)
 330          {
 331   1      
 332   1        uart_init();
 333   1        uart2_init();
 334   1        lcd12864_init ();
 335   1        init_ds18b20();
 336   1        init_ds1302();
 337   1        
 338   1        while (1) {
 339   2          
 340   2          unsigned char *p = "abcd";
 341   2          unsigned char buuu[5]={0x11 ,0x22, 0x33,0x44,0x55};
 342   2          float a = 18.5,c = 0.0;
 343   2          unsigned char b = 0x01, d = 0;
 344   2      
 345   2      
 346   2      //    if(uartf_reciev_frame(&c, &d))
 347   2      //    {
 348   2      //    
 349   2      //    uart_send_byte(c/10 + 0x30);
 350   2      //    uart_send_byte((unsigned char)c%10 + 0x30);
 351   2      //    uart_send_byte((unsigned char)(c*10)%10 +0x30);
 352   2      //    uart_send_byte('\r');
 353   2      //    uart_send_byte('\n');
 354   2      //    uart_send_byte(d + 0x30);
 355   2      //    }
 356   2      //    uart2_send_string("abcdefg");
 357   2      
 358   2          
 359   2          switch (choose_page) {
 360   3          
 361   3          case 0:
 362   3            home () ;
 363   3            break;
 364   3          case 1:
C51 COMPILER V9.56.0.0   MAIN                                                              05/24/2017 20:59:17 PAGE 7   

 365   3            menu();
 366   3            break;
 367   3          case 2:
 368   3            elec_app();
 369   3            break;
 370   3            
 371   3          case 3:
 372   3            setting();
 373   3            break;
 374   3          case 4:
 375   3            other();
 376   3            break;
 377   3            default:
 378   3              break;
 379   3          
 380   3          }
 381   2      
 382   2          
 383   2        }
 384   1      
 385   1      }
 386          
 387          
 388          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1266    ----
   CONSTANT SIZE    =    177    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      42
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
