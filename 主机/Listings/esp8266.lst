C51 COMPILER V9.56.0.0   ESP8266                                                           05/31/2017 21:38:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ESP8266
OBJECT MODULE PLACED IN .\Objects\esp8266.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Source\esp8266.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Head;.\Source\APP\inc
                    -lude) DEBUG OBJECTEXTEND PRINT(.\Listings\esp8266.lst) TABS(2) OBJECT(.\Objects\esp8266.obj)

line level    source

   1          #include "uart2.h"
   2          #include "intrins.h"
   3          #include "string.h" 
   4          
   5          #define ESP8266_RST P32
   6          
   7          extern uint8_t g_uart2_sta;
   8          extern uint8_t xdata __g_uart2_buf[UART2_BUF_SIZE];
   9          
  10          
  11          static void Delay2000ms()   //@11.0592MHz
  12          {
  13   1        unsigned char i, j, k;
  14   1      
  15   1        _nop_();
  16   1        _nop_();
  17   1        i = 85;
  18   1        j = 12;
  19   1        k = 155;
  20   1        do
  21   1        {
  22   2          do
  23   2          {
  24   3            while (--k);
  25   3          } while (--j);
  26   2        } while (--i);
  27   1      }
  28          
  29          void delay_ms (uint8_t time) 
  30          {
  31   1          unsigned char i, j;
  32   1        unsigned char t;
  33   1        for (t = 0; t < time; t++) {
  34   2            _nop_();
  35   2            i = 11;
  36   2            j = 190;
  37   2            do
  38   2            {
  39   3              while (--j);
  40   3            } while (--i);
  41   2        }
  42   1      
  43   1      
  44   1      }
  45          
  46          uint8_t* esp_8266_check_cmd(uint8_t *str)
  47          {
  48   1        
  49   1        char *strx = 0;
  50   1      
  51   1      //  uart2_send_string("2222\r\n");
  52   1        strx = strstr(( char*)__g_uart2_buf,( char*)str);
  53   1        return (uint8_t*)strx;
  54   1      }
C51 COMPILER V9.56.0.0   ESP8266                                                           05/31/2017 21:38:47 PAGE 2   

  55          
  56          
  57          uint8_t esp_8266_send_com ( uint8_t *com, uint8_t *ack, uint16_t waittime)
  58          {
  59   1        uart2_send_string(com);
  60   1        uart2_send_string("\r\n");
  61   1        
  62   1        if (ack && waittime) {
  63   2        
  64   2          while (--waittime) {
  65   3            delay_ms(1);
  66   3            
  67   3            if (esp_8266_check_cmd(ack)) {
  68   4              g_uart2_sta = 0;
  69   4              break;  //响应正确
  70   4            }
  71   3          }
  72   2          
  73   2          if (0 == waittime) {
  74   3            /* 加上这句会有ERROR */
  75   3      //      g_uart2_sta = 0; /////////////////////////////////////////////////////////////
  76   3            return 1;
  77   3          }
  78   2          
  79   2        }
  80   1        return 0;
  81   1      }
  82          
  83          
  84          //uint8_t xdata g_staip_buf[32] = {0};
  85          //uint8_t xdata g_apip_buf[32] = {0};
  86          //extern uint8_t g_uart2_sta;
  87          
  88          //void esp_8266_get_ip (void)
  89          //{
  90          //  uint8_t  *p = NULL;
  91          //  uint8_t *p1 = NULL;
  92          //  uint8_t  *p2 = NULL;
  93          //  uint8_t *ipbuf = NULL;
  94          //  uint8_t  *buf = NULL;
  95          //  
  96          //  uint8_t xdata p_buf[32] = {0};
  97          //  uint8_t xdata p1_buf[32] = {0};
  98          //  uint8_t xdata p2_buf[32] = {0};
  99          //  uint8_t xdata ipbuf_buf[32] = {0};
 100          //  uint8_t xdata buf_buf[32] = {0};
 101          //  
 102          //  p = p_buf;
 103          //  p1=p1_buf;
 104          //  p2=p2_buf;
 105          //  ipbuf = ipbuf_buf;
 106          //  buf = buf_buf;
 107          
 108          //  g_uart2_sta = 0;
 109          //  if (esp_8266_send_com("AT+CIFSR","OK",1000)) {
 110          //  
 111          //  } else {
 112          ////                              APIP,
 113          ////                              APIP,"
 114          //    p = esp_8266_check_cmd("APIP,\"");
 115          ////    p = esp_8266_check_cmd("AP");
 116          //    p1 = (u8*)strstr((char*)(p + 6), "\"");
C51 COMPILER V9.56.0.0   ESP8266                                                           05/31/2017 21:38:47 PAGE 3   

 117          
 118          //    p2 = p1;
 119          //    *p1 = 0;
 120          //    ipbuf = p + 6;
 121          //    
 122          //    /* apip的IP地址 */
 123          ////    sprintf((char*)buf,"AP IP:%s 端口:%s",ipbuf,(u8*)portnum);
 124          //    sprintf((uint8_t*)g_apip_buf,"%s",ipbuf);
 125          ////    sprintf((uint8_t*)g_apip_buf,"%s",p);
 126          ////    sprintf((uint8_t*)g_apip_buf,"%s","abcdddddddd");
 127          //    
 128          //    p = (u8*)strstr((char*)(p2 + 1), "STAIP,\"");
 129          //    p1 = (u8*)strstr((char*)(p + 7), "\"");
 130          
 131          //    *p1 = 0;
 132          //    ipbuf = p + 7;
 133          //    
 134          //    sprintf((char*)g_staip_buf, "%s",ipbuf);
 135          //  
 136          //  }
 137          //}
 138          
 139          uint8_t g_wifi_ok = 0;
 140          void init_esp_8266_setting ( void)
 141          {
 142   1        uint8_t res = 0;
 143   1        
 144   1        ES = 0;
 145   1        ESP8266_RST = 0;
 146   1        delay_ms(100);
 147   1        ESP8266_RST = 1;
 148   1        Delay2000ms();
 149   1        Delay2000ms();
 150   1        /* 设置模式 */
 151   1        esp_8266_send_com("AT+CWMODE=3", "OK", 1000);
 152   1      
 153   1        /* 复位 */
 154   1        esp_8266_send_com("AT+RST", "ready", 5000);
 155   1        
 156   1        esp_8266_send_com("AT+CIPAP=\"192.168.4.1\"", "OK", 2000);
 157   1        Delay2000ms();
 158   1        Delay2000ms();
 159   1        
 160   1      //  esp_8266_send_com("AT+CIPSTA=\"192.168.1.200\"", "OK", 2000);
 161   1        Delay2000ms();
 162   1        Delay2000ms();
 163   1        
 164   1        esp_8266_send_com("AT+CWSAP=\"LWL\",\"12345678\",1,4", "OK", 1000);
 165   1        Delay2000ms();
 166   1      
 167   1      //  esp_8266_send_com("AT+CWJAP=\"MERCURY_A78A\",\"zlgmcu18\"", "OK", 1000);
 168   1        Delay2000ms();
 169   1      
 170   1        esp_8266_send_com("AT+CIPMUX=1", "OK", 1000);
 171   1        Delay2000ms();
 172   1      
 173   1        res = esp_8266_send_com("AT+CIPSERVER=1,8086", "OK", 1000);
 174   1        Delay2000ms();
 175   1      //  esp_8266_get_ip ();
 176   1        if (res == 0) {
 177   2          g_wifi_ok = 1;
 178   2          g_uart2_sta = 0;
C51 COMPILER V9.56.0.0   ESP8266                                                           05/31/2017 21:38:47 PAGE 4   

 179   2        }
 180   1        ES = 1;
 181   1      }
 182          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    331    ----
   CONSTANT SIZE    =    116    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
