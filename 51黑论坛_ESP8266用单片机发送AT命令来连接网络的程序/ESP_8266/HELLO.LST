C51 COMPILER V9.01   HELLO                                                                 04/27/2015 09:44:28 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE HELLO
OBJECT MODULE PLACED IN HELLO.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE HELLO.C OPTIMIZE(5,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1                                            /*************        本地常量声明    **************/
   2          #define MAIN_Fosc               22118400L       //定义主时钟
   3          #define RX1_Lenth               32                      //串口接收缓冲长度
   4          #define BaudRate1               115200UL        //选择波特率
   5          #define Timer1_Reload   (65536UL -(MAIN_Fosc / 4 / BaudRate1))          //Timer 1 重装值， 对应300KHZ
   6          #define Timer2_Reload   (65536UL -(MAIN_Fosc / 4 / BaudRate1))          //Timer 2 重装值， 对应300KHZ
   7          #include        "STC15Fxxxx.H"
   8          /*************  本地变量声明    **************/
   9          u8      idata RX1_Buffer[RX1_Lenth];    //接收缓冲
  10          u8      TX1_Cnt;        //发送计数
  11          u8      RX1_Cnt;        //接收计数
  12          bit     B_TX1_Busy;     //发送忙标志
  13          /*************  端口引脚定义    **************/
  14          sbit LED1=P1^0;//LED1
  15          sbit LED2=P1^1;//LED2
  16          sbit LED3=P3^7;//LED3
  17          sbit DK1=P3^3;//继电器
  18          sbit BEEP=P3^4;//蜂鸣器
  19          sbit K1=P1^3;//按键1
  20          sbit K2=P1^2;//按键2
  21          sbit K3=P1^4;//按键3
  22          char led1bl,led2bl,led3bl;
  23          code unsigned char AT_RST[]="AT+RST\n"; 
  24          void Delay1(unsigned long ms)
  25          {
  26   1              unsigned char i, j,k;
  27   1              for(k=0;k<ms;k++)
  28   1              {
  29   2                      _nop_();
  30   2                      _nop_();
  31   2                      i = 22;
  32   2                      j = 128;
  33   2                      do
  34   2                      {
  35   3                              while (--j);
  36   3                      } while (--i);
  37   2              }
  38   1      }
  39          unsigned char crc_16[35]={0x55,0x26,0x00,0xA0,0x00,0xA8,0x16,0x16,0xA8,0x02,0xE6,0x1E,0x00,0x00,0x00,0x00,
             -0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1e,0xe6};
  40          code unsigned int crc_table[256]=
  41          {               /* CRC余式表 */
  42          0x0000, 0xC0C1, 0xC181, 0x0140, 0xC301, 0x03C0, 0x0280, 0xC241,
  43          0xC601, 0x06C0, 0x0780, 0xC741, 0x0500, 0xC5C1, 0xC481, 0x0440,
  44          0xCC01, 0x0CC0, 0x0D80, 0xCD41, 0x0F00, 0xCFC1, 0xCE81, 0x0E40,
  45          0x0A00, 0xCAC1, 0xCB81, 0x0B40, 0xC901, 0x09C0, 0x0880, 0xC841,
  46          0xD801, 0x18C0, 0x1980, 0xD941, 0x1B00, 0xDBC1, 0xDA81, 0x1A40,
  47          0x1E00, 0xDEC1, 0xDF81, 0x1F40, 0xDD01, 0x1DC0, 0x1C80, 0xDC41,
  48          0x1400, 0xD4C1, 0xD581, 0x1540, 0xD701, 0x17C0, 0x1680, 0xD641,
  49          0xD201, 0x12C0, 0x1380, 0xD341, 0x1100, 0xD1C1, 0xD081, 0x1040,
  50          0xF001, 0x30C0, 0x3180, 0xF141, 0x3300, 0xF3C1, 0xF281, 0x3240,
  51          0x3600, 0xF6C1, 0xF781, 0x3740, 0xF501, 0x35C0, 0x3480, 0xF441,
  52          0x3C00, 0xFCC1, 0xFD81, 0x3D40, 0xFF01, 0x3FC0, 0x3E80, 0xFE41,
  53          0xFA01, 0x3AC0, 0x3B80, 0xFB41, 0x3900, 0xF9C1, 0xF881, 0x3840,
  54          0x2800, 0xE8C1, 0xE981, 0x2940, 0xEB01, 0x2BC0, 0x2A80, 0xEA41,
C51 COMPILER V9.01   HELLO                                                                 04/27/2015 09:44:28 PAGE 2   

  55          0xEE01, 0x2EC0, 0x2F80, 0xEF41, 0x2D00, 0xEDC1, 0xEC81, 0x2C40,
  56          0xE401, 0x24C0, 0x2580, 0xE541, 0x2700, 0xE7C1, 0xE681, 0x2640,
  57          0x2200, 0xE2C1, 0xE381, 0x2340, 0xE101, 0x21C0, 0x2080, 0xE041,
  58          0xA001, 0x60C0, 0x6180, 0xA141, 0x6300, 0xA3C1, 0xA281, 0x6240,
  59          0x6600, 0xA6C1, 0xA781, 0x6740, 0xA501, 0x65C0, 0x6480, 0xA441,
  60          0x6C00, 0xACC1, 0xAD81, 0x6D40, 0xAF01, 0x6FC0, 0x6E80, 0xAE41,
  61          0xAA01, 0x6AC0, 0x6B80, 0xAB41, 0x6900, 0xA9C1, 0xA881, 0x6840,
  62          0x7800, 0xB8C1, 0xB981, 0x7940, 0xBB01, 0x7BC0, 0x7A80, 0xBA41,
  63          0xBE01, 0x7EC0, 0x7F80, 0xBF41, 0x7D00, 0xBDC1, 0xBC81, 0x7C40,
  64          0xB401, 0x74C0, 0x7580, 0xB541, 0x7700, 0xB7C1, 0xB681, 0x7640,
  65          0x7200, 0xB2C1, 0xB381, 0x7340, 0xB101, 0x71C0, 0x7080, 0xB041,
  66          0x5000, 0x90C1, 0x9181, 0x5140, 0x9301, 0x53C0, 0x5280, 0x9241,
  67          0x9601, 0x56C0, 0x5780, 0x9741, 0x5500, 0x95C1, 0x9481, 0x5440,
  68          0x9C01, 0x5CC0, 0x5D80, 0x9D41, 0x5F00, 0x9FC1, 0x9E81, 0x5E40,
  69          0x5A00, 0x9AC1, 0x9B81, 0x5B40, 0x9901, 0x59C0, 0x5880, 0x9841,
  70          0x8801, 0x48C0, 0x4980, 0x8941, 0x4B00, 0x8BC1, 0x8A81, 0x4A40,
  71          0x4E00, 0x8EC1, 0x8F81, 0x4F40, 0x8D01, 0x4DC0, 0x4C80, 0x8C41,
  72          0x4400, 0x84C1, 0x8581, 0x4540, 0x8701, 0x47C0, 0x4680, 0x8641,
  73          0x8201, 0x42C0, 0x4380, 0x8341, 0x4100, 0x81C1, 0x8081, 0x4040
  74          };
  75          unsigned int GetRevCrc_16(unsigned char * pData, int nLength)
  76          {
  77   1        unsigned int cRc_16 = 0xffff;
  78   1        unsigned char temp;
  79   1      
  80   1        while(nLength-- > 0)
  81   1        {
  82   2          temp = cRc_16&0xff; 
  83   2          cRc_16 = (cRc_16 >> 8) ^ crc_table[(temp ^ *pData++) & 0xFF];
  84   2        }
  85   1      
  86   1        return cRc_16;    
  87   1      }
  88          void uart_send_str(unsigned char *str)
  89          {
  90   1        unsigned char *st_p=str;
  91   1        do{
  92   2           SBUF=*st_p;
  93   2               st_p++;
  94   2               Delay1(1);
  95   2              }while(*st_p);
  96   1      }
  97          void main(void)
  98          {
  99   1              char i=0;
 100   1              unsigned int crc=0;
 101   1              crc=GetRevCrc_16(crc_16,35);
 102   1              B_TX1_Busy = 0;
 103   1              RX1_Cnt = 0;
 104   1              TX1_Cnt = 0;
 105   1              S1_8bit();                              //8位数据
 106   1              S1_USE_P30P31();                //UART1 使用P30 P31口   默认
 107   1              AUXR &= ~(1<<4);        //Timer stop            波特率使用Timer2产生
 108   1              AUXR |= 0x01;           //S1 BRT Use Timer2;
 109   1              AUXR |=  (1<<2);        //Timer2 set as 1T mode
 110   1              TH2 = (u8)(Timer2_Reload >> 8);
 111   1              TL2 = (u8)Timer2_Reload;
 112   1              AUXR |=  (1<<4);        //Timer run enable
 113   1              REN = 1;        //允许接收
 114   1              ES  = 1;        //允许中断
 115   1              EA = 1;         //允许全局中断
 116   1              P3M1 = 0x00;
C51 COMPILER V9.01   HELLO                                                                 04/27/2015 09:44:28 PAGE 3   

 117   1          P3M0 = 0xFF;
 118   1              RX1_Cnt=0;
 119   1              DK1=0;
 120   1              BEEP=0;
 121   1              Delay1(500);
 122   1              while(1)
 123   1              {
 124   2              Delay1(500);
 125   2              //uart_send_str(AT_RST);
 126   2              SBUF='A';
 127   2              }
 128   1      }
 129          
 130          /********************* UART1中断函数************************/
 131          void UART1_int (void) interrupt UART1_VECTOR
 132          {
 133   1      
 134   1              if(RI)
 135   1              {
 136   2                      RI = 0;
 137   2                      RX1_Buffer[RX1_Cnt] = SBUF;             //保存一个字节
 138   2      
 139   2              }
 140   1              if(TI)
 141   1              {
 142   2                      TI = 0;
 143   2                      B_TX1_Busy = 0;         //清除发送忙标志
 144   2              }
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    330    ----
   CONSTANT SIZE    =    520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     40      19
   IDATA SIZE       =     32    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
