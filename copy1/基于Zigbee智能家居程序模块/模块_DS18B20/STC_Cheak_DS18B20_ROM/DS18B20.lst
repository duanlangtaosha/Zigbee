C51 COMPILER V9.00   DS18B20                                                               04/24/2016 13:49:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE App\DS18B20.C BROWSE DEBUG OBJECTEXTEND PRINT(.\DS18B20.lst) OBJECT(DS18B20
                    -.obj)

line level    source

   1          #include "./Head/stc12c5a60s2.h"
   2          #include "./Head/intrins.h"
   3          #include "./Head/LCD1602.H"
   4          #include "./Head/ds18b20.h"
   5          unsigned char g_DS18B20_ROM_Buff[8]={0};
   6          //单总线延时函数
   7          //#ifndef STC12  
   8          //void Delay_OneWire(unsigned int t)  //STC89C52RC
   9          //{
  10          //      while(t--);
  11          //}
  12          //#else
  13          void Delay_OneWire(unsigned int t)  //STC12C5260S2
  14          {
  15   1              unsigned char i;
  16   1              while(t--){
  17   2                      for(i=0;i<12;i++);
  18   2              }
  19   1      }
  20          //#endif
  21          
  22          //通过单总线向DS18B20写一个字节
  23          void Write_DS18B20(unsigned char dat)
  24          {
  25   1              unsigned char i;
  26   1              for(i=0;i<8;i++)
  27   1              {
  28   2                      PIN_DS18B20= 0;
  29   2                      PIN_DS18B20 = dat&0x01;
  30   2                      Delay_OneWire(5);
  31   2                      PIN_DS18B20 = 1;
  32   2                      dat >>= 1;
  33   2              }
  34   1              Delay_OneWire(5);
  35   1      }
  36          
  37          //从DS18B20读取一个字节
  38          unsigned char Read_DS18B20(void)
  39          {
  40   1              unsigned char i;
  41   1              unsigned char dat;
  42   1        
  43   1              for(i=0;i<8;i++)
  44   1              {
  45   2                      PIN_DS18B20 = 0;
  46   2                      dat >>= 1;
  47   2                      PIN_DS18B20 = 1;
  48   2                      if(PIN_DS18B20)
  49   2                      {
  50   3                              dat |= 0x80;
  51   3                      }           
  52   2                      Delay_OneWire(5);
  53   2              }
  54   1              return dat;
C51 COMPILER V9.00   DS18B20                                                               04/24/2016 13:49:58 PAGE 2   

  55   1      }
  56          
  57          //DS18B20初始化
  58          bit init_ds18b20(void)
  59          {
  60   1              bit initflag = 0;
  61   1              
  62   1              PIN_DS18B20 = 1;
  63   1              Delay_OneWire(12);
  64   1              PIN_DS18B20 = 0;
  65   1              Delay_OneWire(80); // 延时大于480us
  66   1              PIN_DS18B20 = 1;
  67   1              Delay_OneWire(10);  // 14
  68   1              initflag = PIN_DS18B20;     // initflag等于1初始化失败
  69   1              Delay_OneWire(5);
  70   1        
  71   1              return initflag;
  72   1      }
  73          
  74          //DS18B20温度采集程序：整数
  75          // unsigned char rd_temperature(void)
  76          // {
  77          //     unsigned char low,high;
  78          //      char temp;
  79          //   
  80          //      init_ds18b20();
  81          //      Write_DS18B20(0xCC);
  82          //      Write_DS18B20(0x44); //启动温度转换
  83          //      Delay_OneWire(200);
  84          
  85          //      init_ds18b20();
  86          //      Write_DS18B20(0xCC);
  87          //      Write_DS18B20(0xBE); //读取寄存器
  88          
  89          //      low = Read_DS18B20(); //低字节
  90          //      high = Read_DS18B20(); //高字节
  91          // /** 精度为1摄氏度 */  
  92          //      temp = high<<4;
  93          //      temp |= (low>>4);
  94          //   
  95          //      return temp;
  96          // }
  97          
  98          //DS18B20温度采集程序：浮点数
  99          float rd_temperature_f(void)
 100          {
 101   1          unsigned int temp;
 102   1              float temperature;
 103   1          unsigned char low,high;
 104   1        
 105   1              init_ds18b20();
 106   1              Write_DS18B20(0xCC);
 107   1              Write_DS18B20(0x44); //启动温度转换
 108   1              Delay_OneWire(200);
 109   1      
 110   1              init_ds18b20();
 111   1              Write_DS18B20(0xCC);
 112   1              Write_DS18B20(0xBE); //读取寄存器
 113   1      
 114   1              low = Read_DS18B20(); //低字节
 115   1              high = Read_DS18B20(); //高字节
 116   1      /** 精度为0.0625摄氏度 */  
C51 COMPILER V9.00   DS18B20                                                               04/24/2016 13:49:58 PAGE 3   

 117   1              temp = (high&0x0f);
 118   1              temp <<= 8;
 119   1              temp |= low;
 120   1              temperature = temp*0.0625;
 121   1        
 122   1              return temperature;
 123   1      }
 124          //void DS18B20_Mode(void)
 125          //{
 126          //              unsigned char temperature=0;
 127          //              unsigned char key_value=0;
 128          //              Command_LCD(LCD_CLEAR_SCREEN,CHK_BUSY); // 清屏 
 129          //              LocatPos(0,0);
 130          //              String_LCD("Mode:Temperature");                    //距离          第2行
 131          //              LocatPos(0,1);
 132          //              String_LCD("CurrentTemp:");             
 133          //              LocatPos(15,1);
 134          //              String_LCD("C");
 135          //              while(1)
 136          //              {
 137          //                 if(g_DS18B20_Process)
 138          //                      {
 139          //                              g_DS18B20_Process = 0;
 140          //                              temperature = (unsigned char)rd_temperature_f();  //读温度         
 141          //                              LocatPos(12,1);
 142          //                              WriteToLCD(0x30|temperature/10);
 143          //                              WriteToLCD(0x30|temperature%10);
 144          //              }
 145          //                      key_value=keyscan(); 
 146          //                if(EN_KEY0==key_value)
 147          //                {
 148          //                      g_Mode=EN_TDS_Mode;
 149          //                      break;
 150          //                }
 151          //              }       
 152          //}
 153          
 154          /*****把DS18B20的ROM读入进一个数组里面*********/
 155          void Read_DS18B20_ROM(void)                                      
 156          {
 157   1              unsigned char i;
 158   1              init_ds18b20();
 159   1              Write_DS18B20(0x33);
 160   1              for(i=0;i<8;i++)
 161   1              {
 162   2                      g_DS18B20_ROM_Buff[i]=Read_DS18B20();  //保存序列号到一个数组中去
 163   2              }
 164   1      }
 165          /*****把DS18B20的ROM显示在LCD1602上*********/
 166          void Display_DS18B20_ROM()
 167          {
 168   1              unsigned char i=0,temp=0;
 169   1              Read_DS18B20_ROM();
 170   1              Command_LCD(0x80,CHK_BUSY);                                 
 171   1              for(i=0;i<8;i++)
 172   1              {
 173   2                      temp=g_DS18B20_ROM_Buff[i]>>4;
 174   2                      if(temp<10)
 175   2                      {
 176   3                              WriteToLCD(0x30+temp);
 177   3                      }
 178   2                      else
C51 COMPILER V9.00   DS18B20                                                               04/24/2016 13:49:58 PAGE 4   

 179   2                      {
 180   3                               WriteToLCD(0x37+temp);
 181   3                      }
 182   2                      temp=g_DS18B20_ROM_Buff[i]&0x0f;
 183   2                      if(temp<10)
 184   2                      {
 185   3                              WriteToLCD(0x30+temp);
 186   3                      }
 187   2                      else
 188   2                      {
 189   3                               WriteToLCD(0x37+temp);
 190   3                      }
 191   2              }       
 192   1      }
 193          
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    294    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
